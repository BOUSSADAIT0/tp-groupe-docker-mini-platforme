version: '3.8'

services:
  # Service frontend - Application React
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: mini-platform-frontend
    restart: unless-stopped
    depends_on:
      - backend
    networks:
      - app-network

  # Service backend - API Node.js
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: mini-platform-backend
    restart: unless-stopped
    environment:
      - MONGO_URI=${MONGO_URI}
      - BACKEND_PORT=${BACKEND_PORT}
    volumes:
      - ./backend/log.txt:/usr/src/app/log.txt
    depends_on:
      - db
    networks:
      - app-network

  # Service base de données - MongoDB
  db:
    image: mongo:6
    container_name: mini-platform-mongodb
    restart: unless-stopped
    environment:
      - MONGO_INITDB_DATABASE=${MONGO_INITDB_DATABASE}
    volumes:
      - mongodb_data:/data/db
    networks:
      - app-network

  # Service Nginx - Reverse proxy
  nginx:
    image: nginx:alpine
    container_name: mini-platform-nginx
    restart: unless-stopped
    ports:
      - "${NGINX_PORT}:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./frontend/build:/usr/share/nginx/html:ro
    depends_on:
      - frontend
      - backend
    networks:
      - app-network
# Volumes nommés
volumes:
  mongodb_data:
    name: mini-platform-mongodb-data

# Réseau interne
networks:
  app-network:
    driver: bridge